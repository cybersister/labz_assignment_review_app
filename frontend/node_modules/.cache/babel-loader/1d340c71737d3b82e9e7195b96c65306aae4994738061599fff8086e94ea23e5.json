{"ast":null,"code":"var _jsxFileName = \"/Users/madelinelawrence/Documents/bloomtech/labz/BloomCodeCamp-be-a-starter/frontend/src/components/AssignmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AssignmentPage.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignmentPage = () => {\n  _s();\n  const [assignmentType, setAssignmentType] = useState('');\n  const [githubUrl, setGithubUrl] = useState('');\n  const [branchName, setBranchName] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [assignmentEnums, setAssignmentEnums] = useState([]);\n  useEffect(() => {\n    const fetchAssignmentEnums = async () => {\n      try {\n        const response = await axios.get('/api/assignments/enums');\n        setAssignmentEnums(response.data);\n        setAssignmentType(response.data[0].assignmentName); // Set default value\n      } catch (err) {\n        setError('Failed to fetch assignment types');\n      }\n    };\n    fetchAssignmentEnums();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newAssignment = {\n        assignmentType,\n        githubUrl,\n        branchName\n      };\n      await axios.post('/api/assignments', newAssignment);\n      setSuccess('assignment submitted successfully!');\n      setError('');\n    } catch (err) {\n      setError('failed to submit assignment');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignment-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"assignment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"assignment-title\",\n        children: \"submit assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"assignment-number\",\n        children: \"#12345\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"assignment-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"assignment-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"assignmentType\",\n        className: \"assignment-label\",\n        children: \"assignment type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"assignmentType\",\n        value: assignmentType,\n        onChange: e => setAssignmentType(e.target.value),\n        className: \"assignment-input\",\n        children: assignmentEnums.map(assignment => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: assignment.assignmentName,\n          children: assignment.assignmentName.toLowerCase()\n        }, assignment.assignmentNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        placeholder: \"github url\",\n        value: githubUrl,\n        onChange: e => setGithubUrl(e.target.value),\n        className: \"assignment-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"branch name\",\n        value: branchName,\n        onChange: e => setBranchName(e.target.value),\n        className: \"assignment-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"assignment-button\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"assignment-button\",\n          onClick: () => window.location.href = 'dashboard.html',\n          children: \"back to dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentPage, \"ObkYiyl/kl7SuAGNnTu8cvpD4dY=\");\n_c = AssignmentPage;\nexport default AssignmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssignmentPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AssignmentPage","_s","assignmentType","setAssignmentType","githubUrl","setGithubUrl","branchName","setBranchName","error","setError","success","setSuccess","assignmentEnums","setAssignmentEnums","fetchAssignmentEnums","response","get","data","assignmentName","err","handleSubmit","e","preventDefault","newAssignment","post","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","target","map","assignment","toLowerCase","assignmentNumber","type","placeholder","required","onClick","window","location","href","_c","$RefreshReg$"],"sources":["/Users/madelinelawrence/Documents/bloomtech/labz/BloomCodeCamp-be-a-starter/frontend/src/components/AssignmentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AssignmentPage.css'; // Import the CSS file\n\nconst AssignmentPage = () => {\n  const [assignmentType, setAssignmentType] = useState('');\n  const [githubUrl, setGithubUrl] = useState('');\n  const [branchName, setBranchName] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [assignmentEnums, setAssignmentEnums] = useState([]);\n\n  useEffect(() => {\n    const fetchAssignmentEnums = async () => {\n      try {\n        const response = await axios.get('/api/assignments/enums');\n        setAssignmentEnums(response.data);\n        setAssignmentType(response.data[0].assignmentName); // Set default value\n      } catch (err) {\n        setError('Failed to fetch assignment types');\n      }\n    };\n\n    fetchAssignmentEnums();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const newAssignment = {\n        assignmentType,\n        githubUrl,\n        branchName,\n      };\n      await axios.post('/api/assignments', newAssignment);\n      setSuccess('assignment submitted successfully!');\n      setError('');\n    } catch (err) {\n      setError('failed to submit assignment');\n      setSuccess('');\n    }\n  };\n\n  return (\n    <div className=\"assignment-container\">\n      <form onSubmit={handleSubmit} className=\"assignment-form\">\n        <h1 className=\"assignment-title\">submit assignment</h1>\n        <h2 className=\"assignment-number\">#12345</h2>\n        {error && <p className=\"assignment-error\">{error}</p>}\n        {success && <p className=\"assignment-success\">{success}</p>}\n        <label htmlFor=\"assignmentType\" className=\"assignment-label\">assignment type:</label>\n        <select\n          id=\"assignmentType\"\n          value={assignmentType}\n          onChange={(e) => setAssignmentType(e.target.value)}\n          className=\"assignment-input\"\n        >\n          {assignmentEnums.map((assignment) => (\n            <option key={assignment.assignmentNumber} value={assignment.assignmentName}>\n              {assignment.assignmentName.toLowerCase()}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"url\"\n          placeholder=\"github url\"\n          value={githubUrl}\n          onChange={(e) => setGithubUrl(e.target.value)}\n          className=\"assignment-input\"\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"branch name\"\n          value={branchName}\n          onChange={(e) => setBranchName(e.target.value)}\n          className=\"assignment-input\"\n          required\n        />\n        <div className=\"button-container\">\n          <button type=\"submit\" className=\"assignment-button\">submit</button>\n          <button\n            type=\"button\"\n            className=\"assignment-button\"\n            onClick={() => window.location.href = 'dashboard.html'}\n          >\n            back to dashboard\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AssignmentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}